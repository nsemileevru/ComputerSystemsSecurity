# Лабораторная работа № 1. Тема: Основные методы шифрование.

# Шифр Цезаря:

a = int(input("Введите число сдвига: "))
b = input("Введите строку для шифрования/дешифрования: ")
c = 'abcdefghijklmnopqrstuvwxyz' * 2
d = int(input("Выберите операцию - 1) Шифрование; 2) Дешифрование: "))

res = []
len_c = len(c)

if (d == 1):
    for i in b:
        res.append(c[(c.find(i)+a)%len_c]) 
    print('Зашифрованная строка: ',''.join(res))

elif (d == 2):
    for i in b:
        res.append(c[(c.find(i)-a)%len_c]) 
    print('Расшифрованная строка: ',''.join(res))

else:
    print('Данной операции нет.')

# Шифр Гронсфельда:

a = 'abcdefghijklmnopqrstuvwxyz' * 2
message = str(input("Введите строку для шифрования: "))
key = str(input("Введите ключ: "))
d = int(input("Выберите операцию - 1) Шифрование; 2) Дешифрование: "))

if (d == 1):
    def encrypt(message, key):
        return f(message, key, 1)

    def f(text, k, op):
        k *= len(text) // len(k) + 1
        text = text.upper()
        return ''.join([a[a.index(j) + int(k[i]) * op] for i, j in enumerate(text)])

    print("Зашифрованная строка: ", encrypt(message, key))

elif (d == 2):
    def encrypt(message, key):
        return d(message, key, 1)

    def d(text, k, op):
        k *= len(text) // len(k) + 1
        text = text.upper()
        return ''.join([a[a.index(j) - int(k[i]) * op] for i, j in enumerate(text)])
    print("Рашифрованная строка: ", encrypt(message, key))

else:
    print('Данной операции нет.')

# Шифр Виженера:

from itertools import cycle

alp = 'abcdefghijklmnopqrstuvwxyz'
a = str(input("Введите строку для шифрования: "))
b = str(input("Введите ключ шифрования: "))
d = int(input("Выберите операцию - 1) Шифрование; 2) Дешифрование: "))

text = a.lower()
key = b.lower()

if (d == 1):
    def encode_vijn(text, key):
        f = lambda arg: alp[(alp.index(arg[0])+alp.index(arg[1])%26)%26]
        return ''.join(map(f, zip(text, cycle(key))))
    print("Зашифрованная строка: ", encode_vijn(text, key))

elif (d == 2):
    def encode_vijn(text, key):
        f = lambda arg: alp[(alp.index(arg[0])-alp.index(arg[1])%26)%26]
        return ''.join(map(f, zip(text, cycle(key))))
    print("Расшифрованная строка: ", encode_vijn(text, key))

else:
    print('Данной операции нет.')

"""

                            Контрольные вопросы:

1. Что такое криптографическое преобразование информации !?

    Ответ: Преобразование информации при помощи шифрования и/или выработки имитовставки.

2. Что понимается под шифрованием, расшифрованием и дешифрованием данных !?

    Ответ: Шифрование — это технический процесс, в ходе которого информация преобразуется 
    в секретный код, скрывая таким образом данные, которые вы отправляете, получаете или храните.
    Расшифрование — процесс преобразования зашифрованных данных в открытые данные при помощи шифра.
    Дешифрование — процесс перевода текста или изображения, принятого в виде последовательности 
    сигналов, из зашифрованной формы в незашифрованную с помощью дешифратора.

3. Дайте определения ключа и алгоритма шифрования !?

    Ответ: Ключ шифрования - секретная информация, используемая криптографическим алгоритмом при 
    шифровании/расшифровке сообщений, постановке и проверке цифровой подписи, вычислении кодов аутентичности. 
    Алгоритм шифрования - это определенная последовательность шагов для шифрования данных.

4. Расскажите о криптографическом методе перестановки !?

    Ответ:  Криптографический метод перестановки — это метод симметричного шифрования, в котором элементы 
    исходного открытого текста меняют местами.

5. В чем суть криптографического метода замены !?

    Ответ: Криптографический метод замены — это метод шифрования, в котором элементы исходного открытого 
    текста заменяются зашифрованным текстом в соответствии с некоторым правилом.

6. Какие методы шифрования Вы знаете !? Назовите их достоинства и недостатки.

    Ответ: Симметричный и Асимметричный метод шифрования. Достоинства симметричного метода шифрования: 
    простота реализации (всего один пароль); быстрая скорость зашифровки и дешифровки. Недостатки симметричного 
    метода шифрования: высокие требования к передаче и хранению самого пароля; отсутствие возможности 
    идентифицировать личность, внесшую правки, поскольку Вы и контрагент для системы — одно лицо.
    Достоинства асимметричного метода шифрования: отсутствие проблем с передачей ключа; упрощенная процедура 
    хранения пароля (отсутствие необходимости передавать кому-то закрытый ключ). Недостатки асимметричного 
    метода шифрования: сложности в понимании работы системы; процедура шифрования и дешифрования требует 
    от компьютера, на котором она проводится, значительных ресурсов.

7. Назовите принципы, лежащие в основе известных Вам методах шифрования.

    Ответ: Принцип действия асимметричного шифрования. Схема передачи данных между двумя субъектами (А и Б) с 
    использованием открытого ключа выглядит следующим образом:
        Субъект А генерирует пару ключей, открытый и закрытый (публичный и приватный).
        Субъект А передает открытый ключ субъекту Б. Передача может осуществляться по незащищенным каналам.
        Субъект Б шифрует пакет данных при помощи полученного открытого ключа и передает его А. Передача может 
        осуществляться по незащищенным каналам.
        Субъект А расшифровывает полученную от Б информацию при помощи секретного, закрытого ключа.
    В такой схеме перехват любых данных, передаваемых по незащищенным каналам, не имеет смысла, поскольку 
    восстановить исходную информацию возможно только при помощи закрытого ключа, известного лишь получателю и 
    не требующего передачи.

    Принцип работы симметричных алгоритмов. В целом симметричным считается любой шифр, использующий один и 
    тот же секретный ключ для шифрования и расшифровки. Например, если алгоритм предполагает замену букв числами, 
    то и у отправителя сообщения, и у его получателя должна быть одна и та же таблица соответствия букв и чисел: 
    первый с ее помощью шифрует сообщения, а второй — расшифровывает. Однако такие простейшие шифры легко взломать 
    — например, зная частотность разных букв в языке, можно соотносить самые часто встречающиеся буквы с самыми 
    многочисленными числами или символами в коде, пока не удастся получить осмысленные слова. С использованием 
    компьютерных технологий такая задача стала занимать настолько мало времени, что использование подобных 
    алгоритмов утратило всякий смысл. Поэтому современные симметричные алгоритмы считаются надежными, если отвечают 
    следующим требованиям: Выходные данные не должны содержать статистических паттернов исходных данных 
    (как в примере выше: наиболее частотные символы осмысленного текста не должны соответствовать наиболее частотным 
    символам шифра). Шифр должен быть нелинейным (то есть в шифрованных данных не должно быть закономерностей, 
    которые можно отследить, имея на руках несколько открытых текстов и шифров к ним). Большинство актуальных 
    симметричных шифров для достижения результатов, соответствующих этим требованиям, используют комбинацию операций 
    подстановки (замена фрагментов исходного сообщения, например букв, на другие данные, например цифры, по 
    определенному правилу или с помощью таблицы соответствий) и перестановки (перемешивание частей исходного 
    сообщения по определенному правилу), поочередно повторяя их. Один круг шифрования, состоящий из этих операций, 
    называется раундом.

"""